Динамическое программирование (DP) — это метод решения задач оптимизации, который
заключается в разбиении исходной задачи на более простые подзадачи и решении
каждой подзадачи только один раз, сохраняя решения подзадач для избежания
повторных вычислений. Таким образом, DP используется для оптимизации рекурсивных
алгоритмов, которые решают одну и ту же подзадачу несколько раз.

Основная идея в том, чтобы сохранять результаты вычислений подзадач в таблице
(обычно массиве) и использовать эти результаты при решении более крупных задач.
Это позволяет избежать повторных вычислений и существенно ускоряет процесс
решения задачи.

Применение динамического программирования обычно имеет два основных свойства:

1. **Оптимальная подструктура:** Оптимальное решение исходной задачи может быть
сконструировано из оптимальных решений её подзадач.

2. **Перекрывающиеся подзадачи:** Исходная задача может быть разбита на подзадачи,
решения которых могут пересекаться.

Динамическое программирование применяется в различных областях, таких как
оптимизация, оптимальное управление, обработка изображений, и в решении многих
задач, включая задачи на графах, строки, матрицы и т.д.