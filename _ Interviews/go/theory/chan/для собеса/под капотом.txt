src/runtime/chan.go

Так как каналы должны передаваться между горутинами, единственное
возможное место их хранения - heap.

type hchan struct {
	qcount   uint           // кол-во элементов, хранящихся в буффере
	dataqsiz uint           // размер буффера
	buf      unsafe.Pointer // ссылка на сам буффер
	elemsize uint16
	closed   uint32 // флаг, говорящий, закрыт ли канал. Используется
	                // uint32, а не bool из-за того, что задействован в атомиках
	elemtype *_type // element type
	sendx    uint   // номер ячейки буффера, из которой будет производиться запись
	recvx    uint   // номер ячейки буффера, из которой будет производиться чтение
	recvq    waitq  // ссылка на список горутин, ожидающих чтения
	sendq    waitq  // ссылка на список горутин, ожидающих записи

	lock mutex      // мьютекс
}

Буферизированный канал использует кольцевую очередь. Кольцевая очередь это та, например,
которая состоит из 4 элементов и после того, как произошла запись в
4ю ячейку, следующая запись пойдет в первую. То есть по кругу.