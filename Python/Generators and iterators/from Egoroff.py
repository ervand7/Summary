# Генераторы и итераторы. Функция генератор. Создание генератора при помощи yield

"""
Генератор - это итератор, элементы которого можно итерировать только один раз
Итератор - объект, который поддерживает функцию next(). Помнит о том, какой элемент будет браться следующим
Итерируемый объект - объект, который предоставляет возможность поочередно обойти свои элементы.
Может быть преобразован к итератору
"""

a = [1, 2, 3]  # список - это итерируемый объект
b = iter(a)  # так мы превращаем итерируемый объект в итератор
print(next(b))  # >>>1
print(next(b))  # >>>2
print(next(b))  # >>>3

"""
С помощью выражения-ренератор мы можем при высоконагруженных задачах хранить в памяти бесконечное
число элементов, так как генератор их не держит в памяти, а схватывает на лету
"""
c = (i for i in range(100000000))
for i in c:
    print(i)


# yield - замораживает генератор на каждой итерации. Следующий старт идет с того момента, где произошла заморозка
def fact(n):
    pr = 1
    for i in range(1, n + 1):
        pr *= i
        yield pr


for i in fact(10):
    print(i, end=' ')
