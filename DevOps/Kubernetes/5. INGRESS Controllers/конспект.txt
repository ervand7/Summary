 ● minikube start
 ● kubectl apply -f https://projectcontour.io/quickstart/contour.yaml

 ● kubectl get services -n projectcontour
или
 ● kubectl get services --namespace projectcontour
смотрим сервисы, бегущие в неймспейсе projectcontour

 ● kubectl create deployment first-deployment --image ervand7/k8s_explore:simple_flask
 ● kubectl create deployment web1 --image ervand7/k8s_explore:simple_flask
 ● kubectl create deployment web2 --image ervand7/k8s_explore:simple_flask
 ● kubectl create deployment web3 --image ervand7/k8s_explore:simple_flask
 ● kubectl create deployment tomcat --image=tomcat:8.5.38
 ● kubectl get pods
 ● kubectl get deploy
создаем сразу несколько деплойментов и проверяем их

 ● kubectl scale deployment first-deployment --replicas 2
 ● kubectl scale deployment web1 --replicas 2
 ● kubectl scale deployment web2 --replicas 2
 ● kubectl scale deployment web3 --replicas 2
 ● kubectl scale deployment tomcat --replicas 2
каждый деплоймент скейлим с 2 репликами

 ● kubectl expose deployment first-deployment --port=5000 --type=ClusterIP
 ● kubectl expose deployment web1 --port=5000 --type=ClusterIP
 ● kubectl expose deployment web2 --port=5000 --type=ClusterIP
 ● kubectl expose deployment web3 --port=5000 --type=ClusterIP
 ● kubectl expose deployment tomcat --port=8000 --type=ClusterIP
создаем сервисы
 ● kubectl get services -o wide
получаем расширенную инфо про сервисы

 ● kubectl apply -f ingress-hosts.yaml
 ● kubectl apply -f ingress-paths.yaml
деплоим

 ● kubectl get ingress
 ● kubectl describe ingress

 ● kubectl delete ns projectcontour
полностью удаляем Ingress Controller: Contour