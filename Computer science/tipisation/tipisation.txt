 - Языки программирования делят на типизированные (typed) и нетипизированные (untyped),
 в зависимости от поддерживаемой ими системы типов (картинка 1).

  - По постоянству типа различают языки со статической и динамической типизацией.
  Постоянство типа указывает на то, в какой момент программа определяет тип переменной (картинка 2).

  - По тому, приводится ли значение переменной автоматически к нужному типу на стадии исполнения,
  различают языки со слабой (нестрогой) и сильной (строгой) типизацией. Сильная или слабая
  типизация характеризует отношение языка к неявным преобразованиям типов в различных контекстах.
  Чем сильнее типизация, тем меньше в языке автоматических и неявных преобразований. О чем речь:
  например выражение 1 + "1" или 1 + true (картинка 3).

  - Явной и неявной типизацией называют способность компилятора выводить переменную из контекста.
  Явно типизированные языки отличаются тем, что тип новых переменных, функций и их аргументов
  нужно задавать явно. В языках с неявной типизацией это не всегда необходимо, потому что тип
  может вывести компилятор. О чем речь: int a = 2

Примеры:
Python — динамическая и сильная типизация
JavaScript — динамическая и слабая типизация
C — статическая и слабая, явная типизация
Go — статическая и сильная, явная и неявная типизация