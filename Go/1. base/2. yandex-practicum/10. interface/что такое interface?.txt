В языке Go интерфейс — это набор методов, которые могут быть реализованы типом.
Иными словами, интерфейс — описание того, что может сделать тип.
Если реализует все методы, описанные в интерфейсе, то этот тип удовлетворяет интерфейсу.

Ключевые мысли:
 ● Интерфейс — это тип языка Go, который описывает не структуру переменной, а её поведение.

 ● Реализация интерфейса — это создание такого типа, который реализует поведение,
 описанное интерфейсом.

 ● Переменной типа интерфейс может быть присвоен объект любого типа,
 если он удовлетворяет этому интерфейсу.

 ● С точки зрения языка типы T и *T — разные.

 ● Интерфейс описывается в том же пакете, в котором применяется
 и является частью его контракта для внешних пакетов, которые его реализуют.

 ● Интерфейсы позволяют снизить связность кода.

 ● Интерфейсы позволяют реализовать полиморфизм и сокрытие в парадигме ООП.

 ● Интерфейсы можно комбинировать.

 ● Можно писать свои интерфейсы и к библиотечному коду.