 - VPC is a logical data center in AWS
 - Consists of gateways (or virtual private gateways), route tables, network
 access control lists, subnets, and security groups
 - 1 subnet is always in 1 AZ
 - subnet is basically virtual firewall

 What we can do with VPC?
 - Launch instances into a subnet of your choosing
 - Assign custom IP addresses ranges in each subnet
 - Configure route tables between subnets
 - Create internet gateway and attach it to our VPC
 - Mach better security control over your AWS resources
 - Subnet network access lists
 - You can use network access control lists (NACLs) to block specific IP addresses


Nat (Network Address Translation) Gateways.
Nat is used to enable instances in private subnet to connect to the internet or
other AWS services while preventing the internet from initiating a connection
with those instances. I.e. to forward traffic from private subnets to services
outside your VPC
 - Redundant inside the AZ
 - Starts at 5 GBps and scales currently to 45 GBps
 - No need to patch
 - Not associated with security group
 - Automatically assigned a public IP address
High Availability with NAT Gateways:
If you have resources in multiple AZ and they share a NAT gateway, in the event
the NAT gateway's AZ is down, resources in the other AZ lose internet access.
To create an AZ-independent architecture, create a NAT gateway in each AZ and
configure your routing to ensure resources use the NAT gateway in the same AZ.


Security groups:
 - Security groups are stateful. If you send a request from your instance,
 the response traffic for that request is allowed to flow in regardless of
 inbound security group rules
 - Responses to allowed inbound traffic are allowed to flow out, regardless
 of outbound rules


Network ACL (NACL: Network Access Control Lists)
A NACL is an optional stateless firewall that is associated with a subnet.
NACLs have independent inbound and outbound rules.
ACL (access control list) is the first line of defence. It is an optional layer of
security for your VPC that acts as a firewall for controlling traffic in and out
of one or more subnets. You might set up Network ACLs with rules similar to your
security groups in order to add another layer of security to your VPC.

 - Default Network ACLs. Your VPC comes with default network ACL. And by default
 it allows all outbound and inbound traffic
 - Custom Network ACLs. You can create custom Network ACLs. By default, each
 custom network ACL denies all inbound and outbound traffic until you add rules
 - Subnet associations. Each subnet in your VPC must be associated with a network ACL.
 If you don't explicitly associate a subnet with a network ACL, the subnet is
 automatically associated with the default network ACL.
 - Block IP Addresses. Block IP Addresses using network ACLs, not security groups.

 - You can associate network ACL with multiple subnets; however a subnet can
 be associated with only 1 network ACL at a time. When you associate a network ACL with
 a subnet, the previous association is removed
 - Network ACLs contain a numbered list of rules that are evaluated in order, starting
 with the lowest numbered rule
 - Network ACLs have separate inbound and outbound rules, and each rule can
 either allow or deny traffic
 - Network ACLs are stateless; responses to allowed inbound traffic are subject
 to the rules for outbound traffic (and vice versa). While security groups are stateful.


VPC Endpoints.
Use for private communication by PrivateLink without requiring internet gateway,
NAT device, VPN connection or AWS Direct Connect connection.
 - Use case: when you want to connect AWS services without leaving Amazon internal network.
 - 2 types if VPC Endpoints: interface endpoints and gateway endpoints
 - Gateway endpoints support S3 and DynamoDB


VPC Peering.
 - Allows you to connect 1 VPC with another via a direct network route using private
IP addresses.
 - Instances behave as if they were on the same network
 - Transitive peering is not supported. This must always be in a hub-and-spoke model
 - You can peer between regions
 - You can peer VPCs with other AWS accounts ass well as with other VPCs in the same
 account
 - No overlapping CIDR address ranges
 - Peering is in a star configuration (e.g., 1 central VPC peers with 4 others).
 No transitive peering!


PrivateLink:
 - The safest way to open up a single API endpoint to another AWS VPC
 - If you see a question asking about peering VPCs to tens, hundreds, or
 thousands of customer VPCs, think of AWS PrivateLink
 - Doesn't require VPC peering; no route tables, NAT gateways, internet gateways, etc.
 - Requires a Network Load Balancer on the service VPC and an ENI on the customer VPC


AWS VPN CloudHub.
If you have multiple sites, each with its own VPN connection, you can use AWS VPN
CloudHub to connect those sites together, It's similar to VPC peering in that it works
on a hub-and-spoke model. It is very low cost and easy to manage. Thou it operates
over the public internet, all traffic between the customer gateway and the AWS VPN
CloudHub is encrypted.


Direct Connect.
 - Direct connect directly connects your data center to AWS
 - Useful for high-throughput workloads (e.g., lots of network address)
 - Helpful when you need a stable and reliable connection
 - Useful when you need a high-speed private connection from your on-premises
 environment to AWS
 - Direct Connect is not encrypted by default


Transit Gateway.
Is designed for when you have too many VPCs to peer together.
Transit Gateway has: easy connection of thousands of VPCs, support for hybrid
connectivity (VPN and Direct Connect connections), centralized routing
configuration, and low operational costs. VPC peering has: lower overall
cost, no bandwidth limits, lower latency, security group compatibility with
intra-Region VPC peering.
 - You can use route tables to limit how VPCs talk to one another
 - Works with direct connect as well as VPN connections
 - Supports IP multicast (not supported by any other AWS service)
 - You can use Transit Gateway over VPC peering if you have too many
 VPCs to reasonably peer together.


AWS Wavelength.
If you see a scenario about 5G, increasing application speed at edge using mobile
networks, think of AWS Wavelength
