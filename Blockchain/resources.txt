Coursera:
https://www.coursera.org/learn/blockchain-basics?action=enroll

Patrick:
    old:
        YouTube: https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=5s
        Github repo: https://github.com/smartcontractkit/full-blockchain-solidity-course-js
    new:
        YouTube: https://www.youtube.com/watch?v=-1GB6m39-rM&t=178s
        Github repo: https://github.com/Cyfrin/foundry-full-course-cu

remix:
https://remix.ethereum.org/#lang=en&optimize=false&runs=200&evmVersion=null&version=soljson-v0.8.26+commit.8a97fa7a.js

solidity doc: https://docs.soliditylang.org/en/latest/types.html
style guide: https://docs.soliditylang.org/en/latest/style-guide.html
solidity examples: https://solidity-by-example.org/sending-ether/
solidity compiler: https://github.com/ethereum/solc-js

chainlink doc:
link: https://docs.chain.link/getting-started/conceptual-overview
description: Chainlink provides decentralized oracle services that allow smart contracts on various blockchains to securely interact with external data sources and APIs. Here's why itâ€™s important:
github: https://github.com/smartcontractkit/chainlink/tree/develop

what is blockchain:
https://andersbrownworth.com/blockchain/

metamask wallet:
in chrome extention

faucet: https://faucets.chain.link/
google faucet: https://cloud.google.com/application/web3/faucet/ethereum/sepolia

ganache:
link: https://archive.trufflesuite.com/ganache/
description: deploying fake blockchain locally

etherscan:
link: https://etherscan.io/address
description: eth transactions info

zksync sepolia explorer: https://sepolia.explorer.zksync.io/

eth-converter:
https://eth-converter.com/

go-ethereum:
link: https://github.com/ethereum/go-ethereum
description: Golang execution layer implementation of the Ethereum protocol

Ethereum JSON-RPC Specification:
https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=false&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false

Ethers.js:
https://docs.ethers.org/v5/getting-started/

ether decompiler:
https://ethervm.io/decompile

alchemy:
link: https://www.alchemy.com
description: platform for building and managing blockchain applications

hardhat doc:
link: https://hardhat.org
description: node js framework

chainlist:
link: https://chainlist.org
link on zkSync sepolia testnet: https://chainlist.org/chain/300
description: networks information

rekt:
link: https://rekt.news/leaderboard/
description: hacked DeFi information

typechain:
link: https://github.com/dethcrypto/TypeChain
description: library that simplifies interaction with Ethereum smart contracts

npm packages:
https://www.npmjs.com/package/@chainlink/contracts

hardhat-deploy:
link: https://github.com/wighawag/hardhat-deploy
description: plugin for Hardhat simplifies the deployment and management of smart contracts

aave:
https://github.com/aave/aave-v3-core/tree/master/helpers

evm-opcodes:
https://github.com/crytic/evm-opcodes

l2beat:
link: https://l2beat.com/scaling/summary
description: eth L2 projects

zksync bridge:
description: transfer eth from sepolia to zkSync sepolia
link: https://portal.zksync.io/bridge/?network=sepolia

zkSync doc: https://docs.zksync.io/zk-stack/concepts/finality

l2fees:
description: shows current Ethereum transaction fees on L1 and L2 to help users choose the cheapest option.
link: https://l2fees.info

foundry cheatcodes: https://book.getfoundry.sh/forge/cheatcodes

openchain:
description: is used for verifying, analyzing, and exploring smart contracts to ensure security, transparency, and correct deployment on blockchain networks.
link: https://openchain.xyz

ethereum eips: https://eips.ethereum.org

openzeppelin:
description: documentation which provides trusted, secure, and well-audited smart contract libraries, tools, and guidelines for building decentralized applications (dApps) on Ethereum and other blockchains.
link: https://docs.openzeppelin.com/contracts/5.x/

opensea:
description: a decentralized marketplace for buying, selling, and trading NFTs, supporting multiple blockchains and providing tools for minting, discovering, and managing digital assets.
link: https://opensea.io

defilama:
description: website that provides real-time analytics and rankings for DeFi protocols, focusing on metrics like total value locked (TVL), to help users track the performance and trends within the decentralized finance space.
link: https://defillama.com

flashbots:
description: provides guidance on how to mitigate the negative effects of Maximal Extractable Value (MEV) in blockchain networks, helping developers, validators, and users engage in more fair and transparent practices.
link: https://docs.flashbots.net

EIP-1559:
https://www.youtube.com/watch?v=MGemhK9t44Q
