Разработчикам интересны протоколы прикладного уровня HTTP и HTTPS. Большая часть контента в сети,
будь то статьи на Хабре или картинки с гоферами, передаётся по этим протоколам.
Они базируются на транспортном протоколе TCP, который, в свою очередь, использует протокол
сетевого уровня IP. Протокол IP позволяет адресовать устройства в сети. А TCP гарантирует отправителю,
что «посылки» (пакеты данных) дойдут до адресата, причём в том порядке, в котором были отправлены.
Этого уже достаточно для информационного обмена.

Протокол HTTP, используя гарантии TCP/IP, формализует стороны обмена схемой «клиент-сервер»
(client–server), а сам обмен данными — схемой «запрос-ответ» (request–response).
Роль клиента — отправлять запросы и получать ответы. Можно вспомнить утилиты wget и curl из мира Unix.
Да и браузер — это клиент сетевого взаимодействия.
Роль сервера — принимать запросы и возвращать валидные ответы. Сервер не обязательно должен обладать
огромной вычислительной мощностью, это просто роль в протоколе обмена данными.
Когда браузер делает HTTP-запрос к серверу, он отправляет данные по определённому адресу и порту. 
HTTP-сервер — это программа, которая прослушивает порт компьютера со статическим или динамическим
IP-адресом и отвечает на входящие HTTP-запросы по тому же соединению.