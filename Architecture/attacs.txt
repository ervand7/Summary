1. **SQL-инъекция**: Злоумышленник вставляет SQL-код в запрос, что позволяет ему получить
доступ к базе данных, изменять данные, обходить аутентификацию и даже удалять таблицы.
Например, подставив `OR '1'='1'` в форму логина, злоумышленник может войти без пароля.

2. **XSS (Cross-Site Scripting)**: Злоумышленник внедряет вредоносный JavaScript в веб-страницу,
который выполняется у пользователей. Это позволяет воровать куки, перехватывать данные и
подделывать интерфейс сайта. XSS может быть **хранимым** (код сохраняется в базе данных) или
**отраженным** (код исполняется при загрузке страницы).

3. **CSRF (Cross-Site Request Forgery)**: Пользователь обманом заставляется выполнить действие
на сайте, на котором он уже авторизован. Это позволяет злоумышленнику выполнить запросы от
имени пользователя без его ведома, например, перевести деньги или изменить настройки.

4. **Инъекция команд (Command Injection)**: Злоумышленник внедряет команды системы (например,
через формы или URL) в запрос, что позволяет ему выполнять произвольные команды на сервере.
Особенно опасна, если приложение взаимодействует с командной оболочкой.

5. **Инъекция XML (XXE - XML External Entity)**: Вредоносный XML-контент подается на сервер, что
позволяет злоумышленнику читать локальные файлы, получать доступ к конфиденциальной информации и
вызывать сетевые запросы от имени сервера.

6. **Clickjacking**: Злоумышленник подделывает интерфейс сайта, загружая его в скрытом фрейме и
побуждая пользователя взаимодействовать с ним. Например, заставляет пользователя нажать на
невидимую кнопку "подтвердить", приводя к выполнению нежелательного действия.

7. **Доступ к незащищённым данным (Insecure Direct Object Reference - IDOR)**: Пользователь
получает доступ к данным других пользователей, подставляя в URL другой идентификатор объекта
(например, ID другого пользователя), если система не проверяет авторизацию должным образом.

8. **Brute Force атака**: Злоумышленник пытается угадать пароль, перебирая множество вариантов.
Важно ограничивать количество попыток и использовать сложные пароли, чтобы защититься от этого
типа атаки.

9. **DDoS (Distributed Denial of Service)**: Массированная атака с множеством запросов,
направленных на перегрузку сервера и его отказ в обслуживании легитимных пользователей. Для
защиты можно использовать ограничения частоты запросов и фильтрацию трафика.

10. **RCE (Remote Code Execution)**: Позволяет злоумышленнику удаленно выполнять произвольный код
на сервере. Часто возникает из-за уязвимостей в библиотеке или неправильно обработанных данных,
отправленных пользователем.

11. **Path Traversal (Directory Traversal)**: Злоумышленник использует относительные пути
(например, `../`) в URL или формах для доступа к файловой системе сервера, что позволяет читать
конфиденциальные файлы.

12. **LFI/RFI (Local/Remote File Inclusion)**: Позволяет загрузить и исполнить локальный или
удаленный файл на сервере. Это происходит, когда сервер подставляет пользовательский ввод в путь
файла, что может привести к запуску вредоносного кода.

13. **Подделка сессий (Session Fixation)**: Злоумышленник заранее генерирует сессию и обманом
заставляет жертву её использовать. После авторизации он получает доступ к аккаунту жертвы через
эту сессию.

14. **Man-in-the-Middle (MITM)**: Перехват трафика между пользователем и сервером для чтения
или подмены данных. Часто используется в незащищенных соединениях (без HTTPS).
