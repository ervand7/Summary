Когда наш сервис не справлялся с количеством запросов в секунду, мы использовали
несколько подходов для решения этой проблемы:

1. **Горизонтальное масштабирование**:
   - В Kubernetes мы настроили автошкалирование (Horizontal Pod Autoscaling) для
   автоматического увеличения количества подов при росте нагрузки. Это позволяло
   динамически добавлять новые экземпляры сервиса, чтобы распределить нагрузку.
   ```yaml
   apiVersion: autoscaling/v1
   kind: HorizontalPodAutoscaler
   metadata:
     name: my-service
   spec:
     scaleTargetRef:
       apiVersion: apps/v1
       kind: Deployment
       name: my-service-deployment
     minReplicas: 2
     maxReplicas: 10
     targetCPUUtilizationPercentage: 80
   ```

2. **Оптимизация кода и запросов**:
   - Мы провели профилирование и оптимизацию кода, чтобы улучшить производительность.
   Это включало в себя улучшение запросов к базе данных с использованием `select_related`
   и `prefetch_related`, кэширование результатов, а также оптимизацию алгоритмов.

3. **Кэширование**:
   - Мы внедрили кэширование на различных уровнях (кэширование запросов к базе данных,
   кэширование на уровне приложения с использованием Redis или Memcached), чтобы
   уменьшить нагрузку на базу данных и улучшить время ответа.

4. **Балансировка нагрузки**:
   - Мы использовали балансировщики нагрузки для распределения запросов между несколькими
   экземплярами сервиса. Это помогало равномерно распределить нагрузку и предотвратить
   перегрузку отдельных экземпляров.

5. **Rate Limiting**:
   - В случаях, когда увеличение мощности было недостаточно, мы применяли ограничение
   частоты запросов (rate limiting) для предотвращения перегрузки сервиса. Это помогало
   защищать систему от DDoS-атак и других проблем с перегрузкой.

6. **Мониторинг и алертинг**:
   - Мы настроили систему мониторинга и алертинга с помощью Prometheus и Grafana,
   чтобы своевременно обнаруживать проблемы с производительностью и реагировать на них.
   Это включало отслеживание метрик, таких как CPU, память, RPS, латентность и т.д.
