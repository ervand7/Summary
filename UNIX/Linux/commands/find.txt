https://www.youtube.com/watch?v=7VNKav3ZuAE

 ● find
или
 ● find .
или
 ● find . -print
выводит все файлы и директории в виде просого списка

 ● find . -name "*.json"
ищем в текущей директории все файлы с расширением .json

 ● find . -maxdepth 2 -name "*json>"
с помощью флага maxdepth задаем максимально допустимый уровень вложенности при поиске

 ● find . -type f -name "ervand"
с помощью флага <-type f> задаем поиск только по файлам

 ● find . -type d -name "ervand"
с помощью флага <-type d> задаем поиск только по директориям

 ● find . -type d \( -path ./venv -o -path ./venv2 -o -path ./venv3 \) -prune -o -name '*temp*' -print
исключаем директории venv, venv2, venv3 из поиска

 ● find . -type d \( -name "*venv" -o -name "*venv2" -o -name "*venv3" \) -prune -o -name '*temp*' -print
исключаем любой вложенности директории venv, venv2, venv3 из поиска

 ● find . -iname "*.JsOn"
iname - регистронезависимое название

 ● find . -type f -atime 0
atime - расшифровывается как access time: найти файлы, к которым был доступ за последние 24 часа
 ● find . -type f -atime 1
найти файлы, к которым был доступ в промежуток последних 24-48 часов

 ● find . -type f -mtime 0
mtime - расшифровывается как modify time: найти все измененные файлы за последние 24 часа

 ● find . -type f -anewer file.txt
с помощью параметра anewer мы можем запросить все файлы, доступ к которым мы получали
позднее, чем к file.txt

 ● find . -type f -cnewer file.txt
с помощью параметра cnewer мы можем запросить все файлы, которые были изменены
позднее, чем к file.txt

 ● find . -type f -size 140k
ищем файлы, размер которых 140 килобайт
 ● find . -type f -size +140k
ищем файлы, размер которых больше 140 килобайт
 ● find . -type f -size -140k
ищем файлы, размер которых меньше 140 килобайт
 ● find . -type f -size +130k -a -type f -size -150k
ищем файлы в диапазоне 130-150 килобайт. Флаг <-a> - логическое "или"

 ● find . -type f -exec du -sh {} \; | sort -h
выводит файлы и их размер, с сортировкой
