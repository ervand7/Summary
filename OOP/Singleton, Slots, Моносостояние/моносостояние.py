"""
Изменяя значение атрибута одного экземпляра класса, мы можем изменять значение этого атрибута
сразу у всех других экземпляров класса.
Этого поведения нам удается добиться благодаря тому, что у всех экземпляров класса переменная
__dict__ будет ссылаться на один и тот же объект в памяти (в данном примере на __my_dict).
И, если один экземпляр класса меняет состояние __my_dict, то и значение всех __dict__ у остальных
экземпляров класса будет соответствовать текущему состоянию измененного __my_dict.
"""


class Cat:
    # этот словарь может быть и пустым
    __my_dict = {
        'breed': 'pers',
        'color': 'black'
    }

    def __init__(self):
        self.__dict__ = Cat.__my_dict


a = Cat()
b = Cat()

a.breed = 'siam'
a.name = 'Bob'
a.surname = 'Jonson'

# обратите внимание, что у <b> мы не создавали таких атрибутов как name, surname
# однако они автоматически создались и им присвоилось значение с подобных фтрибутов от <a>
print(b.name)  # Bob
print(b.surname)  # Jonson

# и если поменяем значение атрибута у какого-либо экземпляра класса, то сразу изменится эначение
# этого атрибута у всех других экземпляров класса
a.name = 'John'
a.surname = 'Smith'
print(b.name)  # John
print(b.surname)  # Smith
