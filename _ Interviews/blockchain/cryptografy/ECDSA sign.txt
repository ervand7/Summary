ECDSA (Elliptic Curve Digital Signature Algorithm) — это алгоритм, который
используется для создания цифровых подписей на основе эллиптических кривых. Этот
алгоритм широко используется в блокчейн-системах, таких как Ethereum, для подтверждения
подлинности транзакций и сообщений.

Подпись ECDSA всегда имеет размер 65 байт: 32 байта для `r`, 32 байта для `s` и 1 байт для `v`.

### Основные понятия:
1. **Эллиптическая кривая**:
   ECDSA использует эллиптические кривые, которые представляют собой особые математические
   структуры, обладающие определёнными свойствами. Эти кривые позволяют создавать
   криптографические ключи, которые безопасны и при этом требуют меньше вычислительных
   ресурсов, чем традиционные алгоритмы, такие как RSA.

2. **Приватный и публичный ключи**:
   - **Приватный ключ**: Это секретное число, которое генерируется случайным образом. Оно
   должно храниться в тайне и используется для создания подписей.
   - **Публичный ключ**: Из приватного ключа математически выводится публичный ключ. Этот
   ключ может быть доступен всем и используется для проверки подписи.

### Как работает ECDSA:
1. **Генерация ключей**:
   - Ты сначала создаёшь **приватный ключ** — случайное число.
   - На основе этого приватного ключа с помощью эллиптической кривой создаётся **публичный
   ключ**.

2. **Подпись сообщения**:
   Когда тебе нужно подписать сообщение или транзакцию:
   - Ты используешь свой приватный ключ и сообщение для создания **цифровой подписи**.
   - Подпись уникальна для этого сообщения и приватного ключа.

3. **Проверка подписи**:
   - Люди, которым ты отправляешь сообщение и подпись, могут использовать твой публичный
   ключ для проверки подлинности.
   - Если подпись была создана с использованием твоего приватного ключа, проверка будет
   успешной.
   - Это гарантирует, что сообщение подписано именно тобой, и его содержимое не было изменено.

### Почему это важно:
- **Безопасность**: Никто не может подделать твою подпись, если у них нет твоего приватного
ключа.
- **Аутентичность**: Публичный ключ может быть использован любым человеком для проверки,
что сообщение было действительно подписано тобой.
- **Неподменность**: Любая попытка изменить сообщение приведёт к тому, что подпись станет
недействительной.

### Пример в Ethereum:
Когда ты отправляешь транзакцию в Ethereum, она подписывается твоим приватным ключом с
помощью ECDSA. Это означает, что только ты можешь инициировать эту транзакцию. Узлы в сети
проверяют подпись с помощью твоего публичного ключа, чтобы убедиться, что ты действительно
отправил эту транзакцию.

### Шаги в ECDSA:
1. **Генерация приватного ключа**: Это случайное большое число.
2. **Генерация публичного ключа**: Публичный ключ вычисляется на основе приватного с
помощью математических операций над эллиптической кривой.
3. **Подпись**: Подпись создаётся на основе сообщения и приватного ключа.
4. **Проверка**: Проверка производится с помощью публичного ключа и сообщения.

Это позволяет безопасно проверять транзакции и сообщения без необходимости раскрывать
приватный ключ.