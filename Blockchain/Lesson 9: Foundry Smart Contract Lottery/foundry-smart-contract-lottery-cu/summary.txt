Setup:
 ● foundryup
 ● forge --version

 ● forge init
here can be problems with git

 ● forge bild

Working with chainlink
 ● forge install smartcontractkit/chainlink-brownie-contracts@1.1.1 --no-commit
 ● forhe fmt
 ● forge install transmissions11/solmate@v6 --no-commit
 ● forge install Cyfrin/foundry-devops --no-commit


Creating subscription in UI:
1) subscription manager: https://vrf.chain.link/sepolia
2) go to faucet, receive 25 links and copy transaction hash
0xe6c3942e0f063045ffbf0986af31c410fd7c38de88fbdc5e9e96afe391de6306
3) go to https://docs.chain.link/resources/link-token-contracts#sepolia-testnet 
and click `add to wallet`
4) go back to your subscription https://vrf.chain.link/sepolia and fund it

Automation:
https://docs.chain.link/chainlink-automation/guides/compatible-contracts

Run scripts:
 ● cast wallet import myaccount --interactive
use metamask private key
 ● source .env
 ● forge script script/Interactions.s.sol:FundSubscription --rpc-url $SEPOLIA_RPC_URL --account myaccount --broadcast
after this go to https://vrf.chain.link/sepolia/38954113706610858228321828025925565813353901076081352247063000584589643203844
and check that the subscription is funded

Testing:
 ● forge coverage --report debug
shows, which lines are not covered
 ● forge test -vvvv
 ● source .env && forge test --fork-url $SEPOLIA_RPC_URL -vvvv
 ● forge test --debug testRaffleRevertsWhenDoNotPayEnough
debugging with opcodes

Deploying:
 ● make deploy ARGS="--network sepolia"
 ● make anvil 


Registering upKeep:
1) after deploy, go to https://automation.chain.link/ -> automation and register
new upkeep

Interacting with contract via etherscan:
1) go to read contract page: https://sepolia.etherscan.io/address/0x29f6083653be05d6ba5a2a9462c0b88ce205c2ef#readContract
and connect to metamask