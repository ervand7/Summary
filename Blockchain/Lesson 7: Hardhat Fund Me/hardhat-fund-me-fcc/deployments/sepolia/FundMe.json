{
  "address": "0x8777bD9365bEE7Cf53256967c5D2CBe0e17aA0B8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xae4d108cb5e5dc6a2ab1d62cc1a3a3b313e0fcd810c8d8a7b2e6978ea5fe3ab2",
  "receipt": {
    "to": null,
    "from": "0xc97Ca114c952EA557f49eF605c0F3864c794B373",
    "contractAddress": "0x8777bD9365bEE7Cf53256967c5D2CBe0e17aA0B8",
    "transactionIndex": 27,
    "gasUsed": "877649",
    "logsBloom": "0x
    "blockHash": "0x9ef724be763be09a21ebd719094003c2f2e75c870a5a6c3076ace2242a2bcdd2",
    "transactionHash": "0xae4d108cb5e5dc6a2ab1d62cc1a3a3b313e0fcd810c8d8a7b2e6978ea5fe3ab2",
    "logs": [],
    "blockNumber": 6435689,
    "cumulativeGasUsed": "11510896",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "28cb78f6e367cc2b9eb647568c271262",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n//  SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // using constant we can save gas\\n    uint256 public constant MINIMUM_USD = 0.1 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // good convention to start the name with i_ in immutable case\\n    address public immutable i_owner;\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable{\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enougth\\\"); // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x62aa7257ead01b15661b3d89bec6b6c17330497b4d43409e744586fb5a9430d9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // 3000_000000000000000000 = ETH / USD price\\n        // 1_000000000000000000 ETH\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        // 3000\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd6aac5c2482574d8d2d93279f6b85d3adb3805b16589a5fc513c319837de8ac0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fe638038062000fe683398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610e7e62000168600039600081816102e5015261056f0152610e7e6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b6565b610523565b6040516100d891906107fc565b60405180910390f35b3480156100ed57600080fd5b506100f661053b565b60405161010391906107fc565b60405180910390f35b34801561011857600080fd5b50610121610547565b60405161012e9190610876565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056d565b60405161016391906108a0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e7565b610591565b6040516101a091906108a0565b60405180910390f35b67016345785d8a00006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d090919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610971565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906109c0565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c610a16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b90610a45565b91505061036b565b50600067ffffffffffffffff81111561042f5761042e610a8e565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b50600090805190602001906104739291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610aee565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610b4f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b67016345785d8a000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105dc8361060c565b90506000670de0b6b3a764000085836105f59190610b6f565b6105ff9190610bf8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610cb6565b5050509150506402540be400816106a49190610d31565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b811461079e57600080fd5b50565b6000813590506107b08161078a565b92915050565b6000602082840312156107cc576107cb610753565b5b60006107da848285016107a1565b91505092915050565b6000819050919050565b6107f6816107e3565b82525050565b600060208201905061081160008301846107ed565b92915050565b6000819050919050565b600061083c61083761083284610758565b610817565b610758565b9050919050565b600061084e82610821565b9050919050565b600061086082610843565b9050919050565b61087081610855565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a81610778565b82525050565b60006020820190506108b56000830184610891565b92915050565b6108c4816107e3565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b6000602082840312156108fd576108fc610753565b5b600061090b848285016108d2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567746800000000000000000000000000600082015250565b600061095b601383610914565b915061096682610925565b602082019050919050565b6000602082019050818103600083015261098a8161094e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cb826107e3565b91506109d6836107e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0b57610a0a610991565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a50826107e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8357610a82610991565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad8600083610abd565b9150610ae382610ac8565b600082019050919050565b6000610af982610acb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b39600b83610914565b9150610b4482610b03565b602082019050919050565b60006020820190508181036000830152610b6881610b2c565b9050919050565b6000610b7a826107e3565b9150610b85836107e3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbe57610bbd610991565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c03826107e3565b9150610c0e836107e3565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600081519050610cb0816108bb565b92915050565b600080600080600060a08688031215610cd257610cd1610753565b5b6000610ce088828901610c56565b9550506020610cf188828901610c8c565b9450506040610d0288828901610ca1565b9350506060610d1388828901610ca1565b9250506080610d2488828901610c56565b9150509295509295909350565b6000610d3c82610c6b565b9150610d4783610c6b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8657610d85610991565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc357610dc2610991565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0057610dff610991565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3d57610e3c610991565b5b82820290509291505056fea26469706673582212207100d0b1bab5afc2ad7c842bc1db30aeda4e12588eafde338290650e058dc34e64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b6565b610523565b6040516100d891906107fc565b60405180910390f35b3480156100ed57600080fd5b506100f661053b565b60405161010391906107fc565b60405180910390f35b34801561011857600080fd5b50610121610547565b60405161012e9190610876565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056d565b60405161016391906108a0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e7565b610591565b6040516101a091906108a0565b60405180910390f35b67016345785d8a00006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d090919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610971565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906109c0565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c610a16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b90610a45565b91505061036b565b50600067ffffffffffffffff81111561042f5761042e610a8e565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b50600090805190602001906104739291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610aee565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610b4f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b67016345785d8a000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105dc8361060c565b90506000670de0b6b3a764000085836105f59190610b6f565b6105ff9190610bf8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610cb6565b5050509150506402540be400816106a49190610d31565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b811461079e57600080fd5b50565b6000813590506107b08161078a565b92915050565b6000602082840312156107cc576107cb610753565b5b60006107da848285016107a1565b91505092915050565b6000819050919050565b6107f6816107e3565b82525050565b600060208201905061081160008301846107ed565b92915050565b6000819050919050565b600061083c61083761083284610758565b610817565b610758565b9050919050565b600061084e82610821565b9050919050565b600061086082610843565b9050919050565b61087081610855565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a81610778565b82525050565b60006020820190506108b56000830184610891565b92915050565b6108c4816107e3565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b6000602082840312156108fd576108fc610753565b5b600061090b848285016108d2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567746800000000000000000000000000600082015250565b600061095b601383610914565b915061096682610925565b602082019050919050565b6000602082019050818103600083015261098a8161094e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cb826107e3565b91506109d6836107e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0b57610a0a610991565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a50826107e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8357610a82610991565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad8600083610abd565b9150610ae382610ac8565b600082019050919050565b6000610af982610acb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b39600b83610914565b9150610b4482610b03565b602082019050919050565b60006020820190508181036000830152610b6881610b2c565b9050919050565b6000610b7a826107e3565b9150610b85836107e3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbe57610bbd610991565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c03826107e3565b9150610c0e836107e3565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600081519050610cb0816108bb565b92915050565b600080600080600060a08688031215610cd257610cd1610753565b5b6000610ce088828901610c56565b9550506020610cf188828901610c8c565b9450506040610d0288828901610ca1565b9350506060610d1388828901610ca1565b9250506080610d2488828901610c56565b9150509295509295909350565b6000610d3c82610c6b565b9150610d4783610c6b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8657610d85610991565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc357610dc2610991565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0057610dff610991565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3d57610e3c610991565b5b82820290509291505056fea26469706673582212207100d0b1bab5afc2ad7c842bc1db30aeda4e12588eafde338290650e058dc34e64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}