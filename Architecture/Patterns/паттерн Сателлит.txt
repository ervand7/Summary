**Паттерн "Сателлит"** — это структурный шаблон проектирования, который помогает организовать
дополнительные функции и расширения для основного объекта. В сущности, он создаёт дополнительный
объект (сателлит), который "вращается" вокруг основного объекта и может иметь свои собственные
данные или методы, связанные с этим объектом. Такой паттерн часто используется для разделения
ответственности, добавления расширений и улучшения гибкости кода. Вот как это работает:

### Основные идеи паттерна "Сателлит":
1. **Сателлиты как дополнения**:
   - Основной объект остаётся "ядром" со своей ключевой функциональностью, а дополнительный
   функционал выносится в сателлит-объекты.
   - Сателлиты обычно работают с данными основного объекта и предоставляют дополнительные функции,
   которые не влияют на основную логику.

2. **Гибкость и расширяемость**:
   - Сателлиты позволяют легко добавлять новые функции без изменения основного объекта.
   - Подход удобен, если нужно иметь разный набор функций для разных ситуаций.

3. **Изоляция логики**:
   - Паттерн помогает изолировать разную логику и функции, что упрощает поддержку и улучшает
   читаемость кода.

### Пример
Представим систему пользователей с основным объектом `User`, который хранит основную информацию,
например, `ID`, `Имя` и `Email`. Дополнительные функции, такие как "История действий" или
"Настройки уведомлений", можно вынести в сателлитные объекты:

```go
type User struct {
    ID    int
    Name  string
    Email string
}

type UserHistorySatellite struct {
    userID   int
    actions  []string
}

func (uh *UserHistorySatellite) AddAction(action string) {
    uh.actions = append(uh.actions, action)
}

type UserNotificationSettingsSatellite struct {
    userID    int
    emailOptIn bool
    smsOptIn   bool
}

func (uns *UserNotificationSettingsSatellite) UpdateSettings(email, sms bool) {
    uns.emailOptIn = email
    uns.smsOptIn = sms
}
```

Здесь:
- `User` — основной объект.
- `UserHistorySatellite` и `UserNotificationSettingsSatellite` — сателлиты, добавляющие
возможности по отслеживанию истории действий и настройке уведомлений.

Таким образом, сателлиты помогают организовать дополнительные функции без изменения основного
объекта `User`, обеспечивая модульность и расширяемость системы.