package main

import "fmt"

/*
В первом случае функция возвращает переменную value. При вычислении операнда
return ей действительно присваивается значение "Казалось бы", но эта
переменная захвачена замыканием и изменяется в нём. После чего она и
возвращается из функции.

Во втором случае у нас есть некоторая скрытая переменная, в которую
при вызове оператора return копируется значение её операнда. После любые
действия с value уже не будут важны.
*/

func unintuitive() (value string) {
	defer func() { value = "На самом деле" }()
	return "Казалось бы"
}

func intuitive() string {
	value := "Казалось бы"
	defer func() { value = "На самом деле" }()
	return value
}

func main() {
	fmt.Println(unintuitive()) // На самом деле
	fmt.Println(intuitive())   // Казалось бы
}
