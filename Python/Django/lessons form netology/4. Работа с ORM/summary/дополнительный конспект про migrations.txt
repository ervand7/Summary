migrations - это файлы, которые хранятся в специальной папке <mysite/news/migrations>.
Миграция - это модуль python, который Джанго создает на основе модели.
Миграции необходимы для создания в БД таблиц, полей, связей. По сути файлы-миграции -
это что-то типа контроля версий для наших моделей. Открываем терминал и пишем:
● pip install Pillow
предварительно устанавливаем Pillow
● cd mysite
● python manage.py makemigrations
Отслеживание изменений в моделях и создание миграций для этих моделий.
После этой команды в папке migrations создается файл <0001_initial.py>.
Пока наша БД пуста.

● python manage.py sqlmigrate news 0001
0001 - это порядковый номер из названия только что созданного
файла <0001_initial.py>. Этой командой мы просим терминал показать нам sql-запросы
по которым будут создаваться таблицы.
Также на данном этапе мы можем зайти в <settings.py>. В переменной DATABASES
мы видим дефолтное полключение к sqlite3. Именно здесь можно поменять sqlite3 на postgres.

● python manage.py migrate
запуск процесса миграций
 __________________________________________________________________________________________________________

Далее нам документация https://django.fun/docs/django/ru/3.0/ref/models/fields/#imagefield
говорит, что:
● нужно в файле <settings.py> настроить (дописать) константы
MEDIA_ROOT и MEDIA_URL (см в самом низу файла)

● чтобы загруженные файлы можно было просматривать на сайте, необходимо создать
соответствующий маршрут, который будет указывать на загруженные файлы.
Для этого используется функция static из модуля
venv/lib/python3.8/site-packages/django/conf/urls/static.py.
Эта функция создаст маршрут, по которому маршрутизатор передаст при запросе
файлов управление специальному контроллеру Django, который, собственно,
и отдаст нам файл для просмотра. Зачем такая сложность? Данный маршрут
необходим только в отладочном режиме. Когда же мы переведем сайт на
реальный веб-сервер, этот маршрут уже нам будет не нужен, и файлы уже
будут оослуживаться самим веб-сервером.

Сейчас мы переходим в корневой
файл <my_site/my_site/urls.py> и здесь напишем следующее:
поскольку нам нужно условие, чтобы производить это только в отладочном режиме,
нам нужна специальная константа DEBUG из модуля <settings.py>.
Она по умолчанию True. Когда будем переносить сайт на реальный веб-сервер,
значение этой константы изменим на False. Прописываем в <my_site/my_site/urls.py>:
from django.conf import settings
from django.conf.urls.static import static
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

