Big Endian и Little Endian - это два основных способа представления
многобайтовых данных в памяти компьютера. Они определяют, каким образом
байты, составляющие многобайтовое значение, упорядочены в памяти. Вот их различия:

Давайте рассмотрим число 0x12345678. Это 32-битное число, и его структура
будет следующей:
Старший байт (байт с наибольшим значением): 0x12
Второй байт: 0x34
Третий байт: 0x56
Младший байт (байт с наименьшим значением): 0x78

1. **Big Endian (Большой порядок)**: В этом формате старший (наиболее значащий)
байт размещается в начале памяти (с меньшим адресом), а младший (наименее значащий)
байт - в конце памяти (с большим адресом). То есть, данные упорядочены от
старшего к младшему байту.
   Пример для 32-битного числа `0x12345678`:
   ```
   Адрес:   0x01  0x02  0x03  0x04
   Данные:  0x12  0x34  0x56  0x78
   ```

2. **Little Endian (Малый порядок)**: В этом формате младший байт размещается в
начале памяти (с меньшим адресом), а старший байт - в конце памяти (с большим адресом). То есть, данные упорядочены от младшего к старшему байту.
   Пример для 32-битного числа `0x12345678`:
   ```
   Адрес:   0x01  0x02  0x03  0x04
   Данные:  0x78  0x56  0x34  0x12
   ```

Выбор между Big Endian и Little Endian важен при обмене данными между компьютерами
с разными порядками байтов. Например, сетевые протоколы и файловые форматы могут
специфицировать порядок байтов, и компьютеры должны правильно интерпретировать
данные, чтобы обеспечить совместимость. Это может быть особенно важно в
многоядерных и многоплатформенных системах.