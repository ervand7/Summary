https://www.youtube.com/watch?v=rloqQY9CT8I
 - логика работы планировщика описана в src/runtime/proc.go
 - есть 3 сущности:
    M - тред os
    P - процессор (не железо)
    G - горутина
    - M и P связаны один к одному
    - кол-во горутин, привязанных к процессору неограниченно
    - у каждого процессора есть своя очередь горутин (runqueue)
    - M может переходить от одного P к другому

 - планировщик использует неявную кооперативную многозадачность
 - планировщик использует очередь FIFO
 - M работает по принципу "захвата чужой работы" чтобы ядра не простаивали
 - М работает "неинвазивно". То есть он не будет прерывать работу горутины,
 которая делает большое вычисление
 - планировщик не настраивает приоритетность горутин. Все идет по FIFO
 - планировщик не дает гарантий точного времени выполнения горутин