**Как ноды узнают адрес отправителя из транзакции в Ethereum:**

1. **Получение транзакции:**
   - Транзакция содержит данные (кому отправить, сколько) и **цифровую подпись**
   (`r`, `s`, `v`).
   - **Адрес отправителя в транзакции не указан явно.**

2. **Восстановление публичного ключа:**
   - Нода использует алгоритм **ECDSA** для восстановления публичного ключа из:
     - Цифровой подписи (`r`, `s`, `v`).
     - Хэша транзакции (данные транзакции без подписи).
   - **ECDSA** позволяет восстановить публичный ключ из подписи и сообщения благодаря
   своим математическим свойствам.

3. **Получение адреса отправителя:**
   - Нода хеширует восстановленный публичный ключ с помощью **Keccak-256**.
   - Берет последние 20 байт полученного хеша — это и есть **адрес отправителя**.

4. **Проверка транзакции:**
   - Нода использует полученный адрес для:
     - Проверки баланса отправителя.
     - Проверки корректности **nonce** (счетчика транзакций).
     - Обновления состояния блокчейна при подтверждении транзакции.

**Ключевые моменты:**

- **Адрес отправителя не передается в транзакции** — он восстанавливается из подписи.
- **Публичный ключ не сравнивается ни с чем** — он используется для получения адреса
отправителя.
- **Успешное восстановление публичного ключа и адреса** подтверждает, что транзакция
была подписана владельцем соответствующего приватного ключа.
- **Безопасность обеспечивается** тем, что только владелец приватного ключа может
создать действительную подпись, из которой восстанавливается правильный публичный ключ
и адрес.

**Итог:**
- Нода восстанавливает публичный ключ из подписи и данных транзакции.
- Получает адрес отправителя из публичного ключа.
- Использует этот адрес для проверки и обработки транзакции.
- Нет необходимости сравнивать публичный ключ с чем-либо, так как адрес отправителя
получается именно из него.
