Принято добавлять строки с явной проверкой на имплементацию интерфейсов
пользовательским типом. Они позволяют проверить себя на этапе компиляции
(если тип не имплементирует заданный интерфейс, код не соберётся) и дают
подсказку другим разработчикам.

var (
    _ fmt.Stringer     = (*MyType)(nil)
    _ json.Marshaler   = (*MyType)(nil)
    _ json.Unmarshaler = (*MyType)(nil)
)

type MyType struct{}

В этом коде используется специальная переменная _. Она может принимать
значение любого типа, но не хранит его и в вычислениях участвовать
не может. При этом статическая типизация кода на стадии компиляции выполняется.

В первой строке декларации переменная _ объявляется с интерфейсным
типом fmt.Stringer, а значение ей присваивается литералом. Этот
литерал (*MyType)(nil) имеет тип *MyType и значение nil. Если
тип *MyType не реализует интерфейс fmt.Stringer, то компилятор выдаст
ошибку несоответствия типов.