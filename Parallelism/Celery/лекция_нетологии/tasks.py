"""
Создадим приложение celery.
Нужно понимать, что в отличие от асинхронности, которая исполняется в одном процессе,
здесь мы запускаем несколько дополнительных процессов.
"""
# pip install celery
# pip install redis
# запускаем докер командой <docker run -d -p 6379:6379 redis>
from time import sleep

from celery import Celery

app = Celery(
    'app',
    # backend - это БД куда будут складываться результаты работы воркеров celery
    # /1 в конце означает номер БД
    backend='redis://localhost:6379/1',
    # через broker наше приложение будет слать задачи на celery
    broker='redis://localhost:6379/2'
)


# с помощью этого декоратора мы помечаем нашу функцию как задачу celery
@app.task
def hard_cpu_function(a, b):
    sleep(3)
    return a + b


"""
Поскольку celery работает в отдельных процессах (не в процессе нашего приложения),
нам нужно поднять воркеры celery:
 ● celery -A tasks.app worker -c 2
Внимание! Воркеры celery не запустятся, если у нас предварительно не поднят редис 
(см. начало страницы).
В этой команде <tasks.app> - это наш_файл.наше_приложение. Через флаг -c указываем
кол-во процессов с воркером мы хотим запустить.
То, что у нас запустилось именно 2 процесса, мы можем проверить через:
 ● ps aux | grep celery
Так видим, что запустился один главный процесс, который управляет 2 основными процессами.
"""
