Помимо **скорости (`ns/op`)**, в бенчмарках Go важны ещё **три ключевых
параметра**:

### 1. **Аллокации (`allocs/op`)**
```go test -bench=. -benchmem```
* **Что это:** сколько раз во время выполнения функции Go выделяет память в куче.
* **Почему важно:** аллокации вызывают работу сборщика мусора (GC), а он "дорогой"
по производительности.
* **Цель:** минимизировать количество аллокаций или вовсе избавиться от них
(0 allocs/op — идеально, если возможно).


### 2. **Объём памяти (`B/op` или bytes/op)**
* **Что это:** сколько байт памяти в среднем выделяется за одну операцию.
* **Почему важно:** даже если функция быстрая, она может расходовать много памяти,
что плохо в высоконагруженных системах.
* **Цель:** снизить потребление памяти.


### 3. **Конкурентная устойчивость (опционально)**
```go test -bench=. -race```
* **Что это:** как функция ведёт себя при одновременных вызовах из разных горутин.
* **Как проверяется:** можно использовать `-race` флаг:
* **Цель:** отсутствие data race и хорошее масштабирование при параллелизме.
