### General IAM Concepts
- **Region Independence**: IAM is a global service and does not depend on regions.
- **Default User Permissions**: Newly created users start with no permissions.
They must be explicitly granted access.
- **Policy Evaluation Logic**: In IAM policies, an explicit "deny" always
overrides any "allow" permissions.

### User and Access Management
- **Multi-Factor Authentication (MFA)**: Always enable MFA on the root account
to enhance security.
- **Administrative Group**: Create an admin group for system administrators
and assign necessary permissions to this group rather than individual users.
- **Administrator Accounts**: Create individual user accounts for administrators
and add them to the admin group.
- **Access Keys**: The Access Key ID and Secret Access Key are used for
programmatic access (APIs, CLI), not for AWS Management Console access.
These keys are shown only once upon creation; if lost, they must be
regenerated and securely stored.
- **Password Policy**: Implement and enforce a password rotation policy
for all users to comply with best security practices.

### Roles and Policies
- **Role Configuration**: A single role in IAM can be attached to multiple
policies, allowing for flexible permission combinations.

### IAM Federation
- **Single Sign-On (SSO)**: IAM supports identity federation, which allows
users to log in to AWS with their existing corporate credentials (e.g.,
Microsoft Active Directory) via the Security Assertion Markup Language
(SAML) standard.
- **SAML Integration**: For organizations using Active Directory, setting
up SAML 2.0 integration enables users to have seamless access to AWS services
based on their existing login credentials.

### Best Practices and Tips
- **Security Best Practices**: Regularly review and tighten IAM policies and
group memberships. Use the principle of least privilege to minimize access
rights for users, roles, and services to only those necessary for their tasks.
- **Audit and Monitoring**: Enable AWS CloudTrail to log all IAM and other
AWS service events to ensure visibility and auditing capability.


The "EAR" in a policy document stands for "Effect, Action, Resource."
These are key components of policy documents, especially in systems like AWS
IAM, where they define the outcome (allow or deny), the operations that can
be performed, and the resources to which the policy applies.
